{"version":3,"file":"lit-element-notify.js","sources":["../../node_modules/.pnpm/registry.npmjs.org/@morbidick/lit-element-notify/1.0.2_lit-element@2.2.1+lit-html@1.1.2/node_modules/@morbidick/lit-element-notify/notify.js","../../node_modules/.pnpm/registry.npmjs.org/@morbidick/lit-element-notify/1.0.2_lit-element@2.2.1+lit-html@1.1.2/node_modules/@morbidick/lit-element-notify/sync.js"],"sourcesContent":["/**\n * Returns the event name for the given property.\n */\nexport function eventNameForProperty(name, options = {}) {\n    if (options.notify && typeof options.notify === 'string') {\n        return options.notify;\n    }\n\n    if (options.attribute && typeof options.attribute === 'string') {\n        return `${options.attribute}-changed`;\n    }\n\n    return `${name.toLowerCase()}-changed`;\n}\n\n/**\n * Enables the nofity option for properties to fire change notification events\n *\n * @param {LitElement} baseElement - the LitElement to extend\n */\nexport const LitNotify = (baseElement) => class extends baseElement {\n    /**\n     * Extend the LitElement `createProperty` method to map properties to events\n     */\n    static createProperty(name, options) {\n        super.createProperty(name, options);\n\n        if (!this.hasOwnProperty('_propertyEventMap')) {\n            this._propertyEventMap = new Map();\n        }\n\n        if (options.notify) {\n            this._propertyEventMap.set(name, eventNameForProperty(name, options));\n        }\n    }\n\n    /**\n     * check for changed properties with notify option and fire the events\n     */\n    update(changedProps) {\n        super.update(changedProps);\n\n        if (!this.constructor._propertyEventMap) {\n            return;\n        }\n\n        for (const [eventProp, eventName] of this.constructor._propertyEventMap.entries()) {\n            if (changedProps.has(eventProp)) {\n                this.dispatchEvent(new CustomEvent(eventName, {\n                    detail: {\n                        value: this[eventProp],\n                    },\n                    bubbles: false,\n                    composed: true,\n                }));\n            }\n        }\n    }\n};\n\nexport default LitNotify;\n","import {directive} from \"lit-html/lib/directive.js\";\nimport {eventNameForProperty} from \"./notify.js\";\n\n/**\n * Mixin that provides a lit-html directive to sync a property to a child property\n *\n * @param {LitElement} baseElement - the LitElement to extend\n */\nexport const LitSync = (baseElement) => class extends baseElement {\n    constructor() {\n        super();\n\n        /**\n         * lit-html directive to sync a property to a child property\n         *\n         * @param {string} property - The property name\n         * @param {string} [eventName] - Optional event name to sync on, defaults to propertyname-changed\n         */\n        this.sync = directive((property, eventName) => (part) => {\n            part.setValue(this[property]);\n\n            // mark the part so the listener is only attached once\n            if (!part.syncInitialized) {\n                part.syncInitialized = true;\n\n                const notifyingElement = part.committer.element;\n                const notifyingProperty = part.committer.name;\n                const notifyingEvent = eventName || eventNameForProperty(notifyingProperty);\n\n                notifyingElement.addEventListener(notifyingEvent, (e) => {\n                    this[property] = e.detail.value;\n                });\n            }\n        });\n    }\n}\n\nexport default LitSync;\n"],"names":["eventNameForProperty","name","options","notify","attribute","toLowerCase","LitNotify","baseElement","createProperty","this","hasOwnProperty","_propertyEventMap","Map","set","update","changedProps","constructor","eventProp","eventName","entries","has","dispatchEvent","CustomEvent","detail","value","bubbles","composed","LitSync","sync","directive","property","part","setValue","syncInitialized","notifyingElement","committer","element","notifyingProperty","notifyingEvent","addEventListener","e"],"mappings":"oDAGO,SAASA,EAAqBC,EAAMC,EAAU,WAC7CA,EAAQC,QAAoC,iBAAnBD,EAAQC,OAC1BD,EAAQC,OAGfD,EAAQE,WAA0C,iBAAtBF,EAAQE,oBAC1BF,EAAQE,gCAGZH,EAAKI,gCAQNC,EAAaC,GAAgB,cAAcA,wBAI9BN,EAAMC,SAClBM,eAAeP,EAAMC,GAEtBO,KAAKC,eAAe,4BAChBC,kBAAoB,IAAIC,KAG7BV,EAAQC,aACHQ,kBAAkBE,IAAIZ,EAAMD,EAAqBC,EAAMC,IAOpEY,OAAOC,YACGD,OAAOC,GAERN,KAAKO,YAAYL,sBAIjB,MAAOM,EAAWC,KAAcT,KAAKO,YAAYL,kBAAkBQ,UAChEJ,EAAaK,IAAIH,SACZI,cAAc,IAAIC,YAAYJ,EAAW,CAC1CK,OAAQ,CACJC,MAAOf,KAAKQ,IAEhBQ,SAAS,EACTC,UAAU,OC7CjBC,EAAWpB,GAAgB,cAAcA,EAClDS,2BASSY,KAAOC,EAAU,CAACC,EAAUZ,IAAea,OAC5CA,EAAKC,SAASvB,KAAKqB,KAGdC,EAAKE,gBAAiB,CACvBF,EAAKE,iBAAkB,QAEjBC,EAAmBH,EAAKI,UAAUC,QAClCC,EAAoBN,EAAKI,UAAUlC,KACnCqC,EAAiBpB,GAAalB,EAAqBqC,GAEzDH,EAAiBK,iBAAiBD,EAAiBE,SAC1CV,GAAYU,EAAEjB,OAAOC"}